{"version":1,"Request":{"Prompt":"this function doesn\u0027t seem to work properly. when opening the modal both modalID and modal come back as null on click event","Context":{"VisibleDocuments":[{"Content":"//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Load Event Listener\r\n\r\nif (window.location.pathname === \u0027/index.html\u0027 || window.location.pathname === \u0027/\u0027) {\r\n    document.addEventListener(\u0022DOMContentLoaded\u0022, function () {\r\n        // Initial Animation for navButton\r\n        const navButton = document.querySelector(\u0027.nav__button\u0027);\r\n        navButton.classList.add(\u0027nav__button--initial\u0027);\r\n\r\n        navButton.addEventListener(\u0027mouseover\u0027, function () {\r\n            if (submenu.style.display === \u0027none\u0027 || submenu.style.display === \u0027\u0027) {\r\n                navButton.classList.remove(\u0027nav__button--initial\u0027);\r\n            }\r\n        });\r\n\r\n        navButton.addEventListener(\u0027mouseout\u0027, function () {\r\n            if (submenu.style.display === \u0027none\u0027 || submenu.style.display === \u0027\u0027) {\r\n                navButton.classList.add(\u0027nav__button--initial\u0027);\r\n            }\r\n        });\r\n\r\n        // Submenu Display for mainButton\r\n        const mainButton = document.getElementById(\u0027mainButton\u0027);\r\n        const submenu = document.querySelector(\u0027.nav__submenu\u0027);\r\n        const mainButtonText = mainButton.querySelector(\u0027.nav__button-text\u0027);\r\n\r\n        mainButton.addEventListener(\u0027click\u0027, function () {\r\n            if (submenu.style.display === \u0027none\u0027 || submenu.style.display === \u0027\u0027) {\r\n                submenu.style.display = \u0027block\u0027;\r\n                mainButton.classList.remove(\u0027nav__button--initial\u0027);\r\n                mainButton.classList.add(\u0027nav__button--activated\u0027);\r\n                mainButtonText.classList.add(\u0027activated-text\u0027);\r\n                submenu.classList.add(\u0027show\u0027);\r\n            } else {\r\n                submenu.style.display = \u0027none\u0027;\r\n                mainButton.classList.remove(\u0027nav__button--activated\u0027);\r\n                mainButton.classList.add(\u0027nav__button--initial\u0027);\r\n                mainButtonText.classList.remove(\u0027activated-text\u0027);\r\n                submenu.classList.remove(\u0027show\u0027);\r\n            }\r\n        });\r\n\r\n    });\r\n};\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// dropdown menu \u0026 title animation\r\ndocument.addEventListener(\u0022DOMContentLoaded\u0022, function () {\r\n    const dropdownIcon = document.getElementById(\u0027dropdown-icon\u0027);\r\n    const navbar = document.getElementById(\u0027navbar\u0027);\r\n\r\n    // Timer to re-show dropdown icon\r\n    let timer;\r\n\r\n    // Event Listener to show navbar on hover over dropdown icon\r\n    dropdownIcon.addEventListener(\u0027mouseover\u0027, function () {\r\n        navbar.style.opacity = \u00271\u0027;\r\n        navbar.classList.add(\u0027active\u0027);\r\n    });\r\n\r\n    // Event Listener to hide navbar on mouseleave\r\n    navbar.addEventListener(\u0027mouseleave\u0027, function () {\r\n        navbar.style.opacity = \u00270\u0027;\r\n        navbar.classList.remove(\u0027active\u0027);\r\n    });\r\n\r\n    // Event Listener to cancel timer if mouse is back in navbar\r\n    navbar.addEventListener(\u0027mouseover\u0027, function () {\r\n        clearTimeout(timer);\r\n    });\r\n});\r\n\r\ndocument.addEventListener(\u0022DOMContentLoaded\u0022, function () {\r\n    animateTitlesAndSubtitles();\r\n});\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n// sidebar\r\nif (window.location.pathname !== \u0027/index.html\u0027) {\r\n    document.addEventListener(\u0022DOMContentLoaded\u0022, function () {\r\n        // Wait for a set time after page load to start the animation (e.g., 2 seconds)\r\n        setTimeout(function () {\r\n            const sidebar = document.getElementById(\u0027sidebar-nav\u0027);\r\n            const listItems = sidebar.querySelectorAll(\u0027ul li\u0027);\r\n\r\n            // Slide in the sidebar container from the left\r\n            sidebar.classList.add(\u0027show\u0027);\r\n\r\n            // Fade in list items one after the other\r\n            setTimeout(function () {\r\n                listItems.forEach(function (item) {\r\n                    item.classList.add(\u0027show\u0027);\r\n                });\r\n            }, 100);  // Starts fading in list items 1 second after the sidebar starts sliding in\r\n        }, 100);\r\n    });\r\n};\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Functions\r\nfunction prepareForAnimation(titleElement) {\r\n    const text = titleElement.textContent;\r\n    titleElement.innerHTML = \u0027\u0027;\r\n    titleElement.style.opacity = \u00270\u0027; // Hide it\r\n\r\n    for (let i = 0; i \u003C text.length; i\u002B\u002B) {\r\n        let character = text[i];\r\n        let span = document.createElement(\u0027span\u0027);\r\n        span.className = \u0027character\u0027;\r\n        span.style.opacity = \u00270\u0027;  // Keep it hidden\r\n        span.textContent = character === \u0027 \u0027 ? \u0027\\u00A0\u0027 : character;\r\n        titleElement.appendChild(span);\r\n    }\r\n}\r\n\r\nfunction startAnimation(titleElement, delay = 0) {\r\n    titleElement.style.opacity = \u00271\u0027; // Show it\r\n\r\n    const characters = titleElement.querySelectorAll(\u0027.character\u0027);\r\n    characters.forEach((character, index) =\u003E {\r\n        setTimeout(() =\u003E {\r\n            character.style.opacity = \u00271\u0027;\r\n            character.style.transform = \u0027translateY(0)\u0027;\r\n        }, delay \u002B index * 100);\r\n    });\r\n\r\n    return titleElement.textContent.length * 100;\r\n}\r\n\r\nasync function animateTitlesAndSubtitles() {\r\n    const pageTitle = document.querySelector(\u0027.page__title\u0027);\r\n    const pageSubtitle = document.querySelector(\u0027.page__subtitle\u0027);\r\n\r\n    let titleDuration = 0;\r\n\r\n    // Check if the pageTitle element actually exists on this page\r\n    if (pageTitle) {\r\n        prepareForAnimation(pageTitle);\r\n        titleDuration = startAnimation(pageTitle);\r\n    }\r\n\r\n    // Check if the pageSubtitle element actually exists on this page\r\n    if (pageSubtitle) {\r\n        prepareForAnimation(pageSubtitle);\r\n\r\n        if (pageTitle) {\r\n            // Wait for the pageTitle animation to finish\r\n            setTimeout(() =\u003E {\r\n                startAnimation(pageSubtitle);\r\n            }, titleDuration);\r\n        } else {\r\n            // No pageTitle to wait for, start immediately\r\n            startAnimation(pageSubtitle);\r\n        }\r\n    }\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Modal functions\r\ndocument.addEventListener(\u0022DOMContentLoaded\u0022, function () {\r\n    // 1. Open Modal Logic\r\n    document.querySelectorAll(\u0027.category__container\u0027).forEach(container =\u003E {\r\n        container.addEventListener(\u0027click\u0027, function (e) {\r\n            const modalID = e.currentTarget.getAttribute(\u0027data-modal\u0027);\r\n            const modal = document.querySelector(\u0060#${modalID}\u0060);\r\n            console.log(\u0022Selected Modal ID:\u0022, modalID);\r\n            console.log(\u0022Modal Element:\u0022, modal);\r\n            if (modal) {\r\n                modal.style.display = \u0027block\u0027;\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    // 2. Close Modal Logic\r\n    document.querySelectorAll(\u0027.modal .close-btn\u0027).forEach(btn =\u003E {\r\n        btn.addEventListener(\u0027click\u0027, function () {\r\n            const modal = this.closest(\u0027.modal\u0027);\r\n            if (modal) {\r\n                modal.style.display = \u0027none\u0027;\r\n            }\r\n        });\r\n    });\r\n\r\n    document.addEventListener(\u0027keydown\u0027, function (e) {\r\n        if (e.key === \u0027Escape\u0027) {\r\n            document.querySelectorAll(\u0027.modal\u0027).forEach(modal =\u003E {\r\n                modal.style.display = \u0027none\u0027;\r\n            });\r\n        }\r\n    });\r\n\r\n    // Optional: Close modal when clicking outside of modal content\r\n    document.querySelectorAll(\u0027.modal\u0027).forEach(modal =\u003E {\r\n        modal.addEventListener(\u0027click\u0027, function (e) {\r\n            if (e.target === this) {\r\n                this.style.display = \u0027none\u0027;\r\n            }\r\n        });\r\n    });\r\n});\r\n","Selections":[{"Caret":7766,"Start":6308,"End":7766}],"FilePath":"D:\\School\\School Work Code\\Udemy Code\\Complete Javascript 2023\\(0) Portfolio Project\\JS\\script.js","Language":"JavaScript"}],"PreSelectedSkill":null,"CorrelationId":{"Guid":"2ff63386-9c24-48d1-84b1-0071b2ac2520"}}},"Response":{"Content":"document.addEventListener(\u0022DOMContentLoaded\u0022, function () {\n    const modals = document.querySelectorAll(\u0027.modal\u0027);\n\n    // 1. Open Modal Logic\n    document.querySelectorAll(\u0027.category__container\u0027).forEach(container =\u003E {\n        container.addEventListener(\u0027click\u0027, function (e) {\n            const modalID = e.currentTarget.getAttribute(\u0027data-modal\u0027);\n            const modal = Array.from(modals).find(m =\u003E m.id === modalID);\n            console.log(\u0022Selected Modal ID:\u0022, modalID);\n            console.log(\u0022Modal Element:\u0022, modal);\n            if (modal) {\n                modal.style.display = \u0027block\u0027;\n            }\n        });\n    });\n\n\n    // 2. Close Modal Logic\n    document.querySelectorAll(\u0027.modal .close-btn\u0027).forEach(btn =\u003E {\n        btn.addEventListener(\u0027click\u0027, function () {\n            const modal = this.closest(\u0027.modal\u0027);\n            if (modal) {\n                modal.style.display = \u0027none\u0027;\n            }\n        });\n    });\n\n    document.addEventListener(\u0027keydown\u0027, function (e) {\n        if (e.key === \u0027Escape\u0027) {\n            document.querySelectorAll(\u0027.modal\u0027).forEach(modal =\u003E {\n                modal.style.display = \u0027none\u0027;\n            });\n        }\n    });\n\n    // Optional: Close modal when clicking outside of modal content\n    document.querySelectorAll(\u0027.modal\u0027).forEach(modal =\u003E {\n        modal.addEventListener(\u0027click\u0027, function (e) {\n            if (e.target === this) {\n                this.style.display = \u0027none\u0027;\n            }\n        });\n    });\n});","Type":1,"Status":1,"FollowUpPrompts":null},"SelectedFunctionName":"Fix","LoggedSkillInvocations":null}
